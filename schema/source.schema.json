{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "http://raw.githubusercontent.com/mobie/mobie.github.io/master/schema/source.schema.json",
    "title": "MoBIESourceSchema",
    "description": "Schema describing a MoBIE source",

    "definitions": {

        "imageData": {
            "description": "Description of the image data for this source, including the file format and the location of the data.",
            "type": "object",
            "properties": {
                "bdv.hdf5": {
                    "type": "object",
                    "description": "Data stored in the bdv.hdf5 format, i.e. hdf5 data that is stored on the local fileystem.",
                    "properties": {
                        "relativePath": {
                            "type": "string",
                            "description": "The file path to the xml storing the bdv metadata, relative to the dataset root location."
                        },
                        "absolutePath": {
                            "type": "string",
                            "description": "The absolute file path to the xml storing the bdv metadata."
                        },
                        "channel": {
                            "type": "integer",
                            "description": "Optional setup to display from the bdv.xml, in case it contains multiple setups."
                        }
                    },
                    "oneOf": [
                        {"required": ["relativePath"]},
                        {"required": ["absolutePath"]}
                    ],
                    "additionalProperties": false
                },
                "bdv.n5": {
                    "type": "object",
                    "description": "Data stored in the bdv.n5 format, i.e. n5 data that is stored on the local fileystem.",
                    "properties": {
                        "relativePath": {
                            "type": "string",
                            "description": "The file path to the xml storing the bdv metadata, relative to the dataset root location."
                        },
                        "absolutePath": {
                            "type": "string",
                            "description": "The absolute file path to the xml storing the bdv metadata."
                        },
                        "channel": {
                            "type": "integer",
                            "description": "Optional setup to display from the bdv.xml, in case it contains multiple setups."
                        }
                    },
                    "oneOf": [
                        {"required": ["relativePath"]},
                        {"required": ["absolutePath"]}
                    ],
                    "additionalProperties": false
                },
                "bdv.n5.s3": {
                    "type": "object",
                    "description": "Data stored in the bdv.n5.s3 format, i.e. n5 data that is stored on a s3 object store.",
                    "properties": {
                        "relativePath": {
                            "type": "string",
                            "description": "The file path to the xml storing the bdv metadata, relative to the dataset root location."
                        },
                        "channel": {
                            "type": "integer",
                            "description": "Optional setup to display from the bdv.xml, in case it contains multiple setups."
                        }
                    },
                    "required": ["relativePath"],
                    "additionalProperties": false
                },
                "bdv.ome.zarr": {
                    "type": "object",
                    "description": "Data stored in the bdv.ome.zarr format, i.e. ome.zarr data that is stored on the local fileystem with additional bdv xml metadata. This data format is deprecated, please use ome.zarr instead.",
                    "properties": {
                        "relativePath": {
                            "type": "string",
                            "description": "The file path to the xml storing the bdv metadata, relative to the dataset root location."
                        },
                        "absolutePath": {
                            "type": "string",
                            "description": "The absolute file path to the xml storing the bdv metadata."
                        },
                        "channel": {
                            "type": "integer",
                            "description": "Optional setup to display from the bdv.xml, in case it contains multiple setups."
                        }
                    },
                    "oneOf": [
                        {"required": ["relativePath"]},
                        {"required": ["absolutePath"]}
                    ],
                    "additionalProperties": false
                },
                "bdv.ome.zarr.s3": {
                    "type": "object",
                    "description": "Data stored in the bdv.ome.zarr.s3 format, i.e. ome.zarr data that is stored on a s3 object store with additional bdv xml metadata. This data format is deprecated, please use ome.zarr.s3 instead.",
                    "properties": {
                        "relativePath": {
                            "type": "string",
                            "description": "The file path to the xml storing the bdv metadata, relative to the dataset root location."
                        },
                        "channel": {
                            "type": "integer",
                            "description": "Optional setup to display from the bdv.xml, in case it contains multiple setups."
                        }
                    },
                    "required": ["relativePath"],
                    "additionalProperties": false
                },
                "ome.zarr": {
                    "type": "object",
                    "description": "Data stored in the ome.zarr format, i.e. ome.zarr data that is stored on the local fileystem.",
                    "properties": {
                        "relativePath": {
                            "type": "string",
                            "description": "The file path to the ome.zarr file, relative to the dataset root location."
                        },
                        "absolutePath": {
                            "type": "string",
                            "description": "The absolute file path to the ome.zarr file."
                        },
                        "channel": {
                            "type": "integer",
                            "description": "Optional channel to display from the ome.zarr file, in case it contains multiple channels."
                        }
                    },
                    "oneOf": [
                        {"required": ["relativePath"]},
                        {"required": ["absolutePath"]}
                    ],
                    "additionalProperties": false
                },
                "ome.zarr.s3": {
                    "type": "object",
                    "description": "Data stored in the ome.zarr.s3 format, i.e. ome.zarr data that is stored on a s3 object store.",
                    "properties": {
                        "s3Address": {
                            "type": "string",
                            "description": "The s3 address for this image data."
                        },
                        "signingRegion": {
                            "type": "string",
                            "description": "The signing region for aws, e.g. us-east-1"
                        },
                        "channel": {
                            "type": "integer",
                            "description": "Optional channel to display from the ome.zarr file, in case it contains multiple channels."
                        }
                    },
                    "required": ["s3Address"],
                    "additionalProperties": false
                },
                "openOrganelle.s3": {
                    "type": "object",
                    "description": "Data stored in the openOrganelle file format on a s3 object store.",
                    "properties": {
                        "s3Address": {
                            "type": "string",
                            "description": "The s3 address for this image data."
                        },
                        "signingRegion": {
                            "type": "string",
                            "description": "The signing region for aws, e.g. us-east-1"
                        },
                        "channel": {
                            "type": "integer",
                            "description": "Optional channel to display from the open organelle file, in case it contains multiple channels."
                        }
                    },
                    "required": ["s3Address"],
                    "additionalProperties": false
                }
            },
            "additionalProperties": false,
            "minProperties": 1
        },

        "tableData": {
            "description": "Description of the table data for this source, including the format and the location of the table data.",
            "type": "object",
            "properties": {
                "tsv": {
                    "type": "object",
                    "description": "Table data in tsv file format, specified as root location for the folder with tables. The folder MUST contain the table default.tsv, which will always be loaded as the first table for this source; this table MUST contain the mandatory columns for the given source type.",
                    "properties": {
                        "relativePath": {
                            "type": "string",
                            "description": "The relative path of the table data w.r.t the dataset root location."
                        }
                    },
                    "additionalProperties": false,
                    "required": ["relativePath"]
                }
            },
            "additionalProperties": false,
            "required": ["tsv"]
        },

        "imageSource": {
            "description": "An image source. The source name (=key for this source entry) must be the same as the setup name in the bdv.xml.",
            "type": "object",
            "properties": {
                "imageData": {"$ref": "#/definitions/imageData"}
            },
            "required": ["imageData"],
            "additionalProperties": false
        },

        "segmentationSource": {
            "description": "A segmentation source. The source name (=key for this source entry) must be the same as the setup name in the bdv.xml.",
            "type": "object",
            "properties": {
                "imageData": {"$ref": "#/definitions/imageData"},
                "tableData": {"$ref": "#/definitions/tableData"}
            },
            "required": ["imageData"],
            "additionalProperties": false
        },

        "spotSource": {
            "description": "A spot source, corresponding to a collection of points loaded from a table. The table must contain the columns 'spot_id', as well as 'x', 'y', 'z' ('z' is not required for 2d datasets.)",
            "type": "object",
            "properties": {
                "boundingBoxMin": {
                    "description": "The minimum of the bounding box of physical cooridinates for the spots.",
                    "type": "array",
                    "items": {
                        "type": "number"
                    },
                    "minItems": 2,
                    "maxItems": 3
                },
                "boundingBoxMax": {
                    "description": "The maximum of the bounding box of physical cooridinates for the spots.",
                    "type": "array",
                    "items": {
                        "type": "number"
                    },
                    "minItems": 2,
                    "maxItems": 3
                },
                "tableData": {"$ref": "#/definitions/tableData"},
                "unit": {
                    "description": "The unit of measurement for the coordinate system, e.g. micrometer or nanometer",
                    "type": "string"
                }
            },
            "required": ["tableData", "boundingBoxMin", "boundingBoxMax", "unit"],
            "additionalProperties": false
        },

        "regionSource": {
            "description": "A region table, corresponding to a image region attributes. The table must contain the column 'region_id'. Can be referenced in regionDisplays",
            "type": "object",
            "properties": {
                "tableData": {"$ref": "#/definitions/tableData"}
            },
            "required": ["tableData"],
            "additionalProperties": false
        }

    },

    "type": "object",
    "oneOf": [
        {
            "properties": {
                "image": {"$ref": "#/definitions/imageSource"}
            },
            "required": ["image"],
            "additionalProperties": false
        },
        {
            "properties": {
                "segmentation": {"$ref": "#/definitions/segmentationSource"}
            },
            "required": ["segmentation"],
            "additionalProperties": false
        },
        {
            "properties": {
                "spots": {"$ref": "#/definitions/spotSource"}
            },
            "required": ["spots"],
            "additionalProperties": false
        },
        {
            "properties": {
                "regions": {"$ref": "#/definitions/regionSource"}
            },
            "required": ["regions"],
            "additionalProperties": false
        }
    ]
}
